<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
  <title></title>
  <style type="text/css">code{white-space: pre;}</style>
  <link rel="stylesheet" href="jd.css">
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<p><div id="nav"><a href="Index.htm">Jd</a>&nbsp;|&nbsp;<a href="Overview.htm">Overview</a>&nbsp;|&nbsp;<a href="General.htm">General</a>&nbsp;|&nbsp;<a href="Ops.htm">Ops</a>&nbsp;|&nbsp;<a href="Admin.htm">Admin</a>&nbsp;|&nbsp;<a href="Replicate.htm">Replicate</a>&nbsp;|&nbsp;<a href="Guide.htm">Guide</a>&nbsp;|&nbsp;<a href="Technical.htm">Technical</a>&nbsp;|&nbsp;<a href="Release.htm">Release</a>&nbsp;|&nbsp;<a href="License.htm">License</a>&nbsp;|&nbsp;<a href="Support.htm">Support</a></div></p>
<p>CSVFOLDER__ - implicit arg - path for csv and related files<br />
csv files can be on a different drive than Jd tables<br />
csv intermediate files are on the same drive as Jd tables<br />
f.csv metadata in f.cdefs<br />
See tutorial csv.</p>
<h2 id="cdefs-file-format-csv-metadata">cdefs file format (csv metadata)</h2>
<p>eol delimited column definitions<br />
  col name type [width]<br />
   col is 1 origin column number in csv file<br />
   name is column name (used in file/folder names)<br />
   type<br />
    boolean, int, float, byte, varbyte<br />
    edate - 2014-01-02<br />
    edatetime - 2014-01-02T03:04:05<br />
    edatetimem - 2014-01-02T03:04:05,123<br />
    edatetimen - 2014-01-02T03:04:05,123456789<br />
    date - yyyy/mm/dd<br />
    datex - dd/mm/yyyy<br />
    datetime - yyyy/mm/dd hh:mm:ss<br />
    datetimex - dd/mm/yyyy hh:mm:ss<br />
   width<br />
    must not be 0<br />
    byte column width - elided is list<br />
    varbyte average (file allocation - elide for default)<br />
    numeric column width<br />
     - elided is list - value ignored and set as 1+#CSTITCH<br />
options colsep rowsep quoted escaped headers [epoch]<br />
  colsep - 1 char or BLANK or TAB or AUTO<br />
  rowsep  - 1 or 2 chars or CR or LF or CRLF or AUTO<br />
  quoted  - 1 char (usually “) or NO<br />
  escaped  - 1 char (usually \) or NO - \0 \b \t \n \r \” \' \\<br />
  headers  - 0 up to 10 header rows to skip<br />
  epoch  - iso8601-char or iso8601-int (elided is iso8601-char)<br />
</p>
<h2 id="csvcdefs">csvcdefs</h2>
<p>csvcdefs [options] csvfile - create x.cdefs from x.csv<br />
  /replace - start with delete cdefs file<br />
  /c - x.cnames file used for column names<br />
  /h n - n headers<br />
  /u - default col names - written to x.cnames<br />
  /v w - byte col wider than w treated as varbyte - default 200<br />
  col types determined by examining first 5000 rows<br />
  int1/int2/int4 cols not detected - treated as int</p>
<p>/u m creates default .cname file with m cols<br />
  cols at end with no data in probed rows are removed</p>
<h2 id="csvdump">csvdump</h2>
<p>csvdump [options]<br />
  /e - write epoch cols as ints (cdefs option iso8601-int)<br />
  /replace - start with delete CSVFOLDER<br />
  csvwr all tables<br />
  writes jdcsvrefs.txt file with ref info<br />
  db files (admin.ijs) are also written</p>
<h2 id="csvrd">csvrd</h2>
<p>csvrd [options] csvfile table<br />
  /rows n - read n rows - default all<br />
  /cdefs - read cdefs from implicit arg CDEFSFILE<br />
Prior to release 4.28 the numeric conversion rules were inconsistent and did not handle missing data.</p>
<p>Missing data (empty field or all blanks) and bad data converts to the minimum value for the type.</p>
<p>csvreport gives info on the load and errors.</p>
<p><code>jd'csvreport'           NB. summary of last csvrd for all tables</code><br />
<code>jd'csvreport /errors h' NB. error table for for table h</code></p>
<p>The definition of bad data varies across types as some are more or less permissive.</p>
<ul>
<li>boolean</li>
</ul>
<p>1st non-blank must be 0fF or 1tT and later chars ignored</br> missing/bad - 0</p>
<ul>
<li>int</li>
</ul>
<p>leading chars other than +-digit ignored</br> bad unless at least 1 digit</br> chars after last digit are ignored</br> missing/bad - IMIN_jd_</p>
<ul>
<li>int1</li>
</ul>
<p>same rules as int</br> bad if not in range I1MIN to I1MAX</br> missing/bad - I1MIN_jd_</p>
<ul>
<li>int2</li>
</ul>
<p>same rules as int</br> bad if not in range I2MIN to I2MAX</br> missing/bad - I2MIN_jd_</p>
<ul>
<li>int4</li>
</ul>
<p>same rules as int</br> bad if not in range I4MIN to I4MAX</br> missing/bad - I4MIN_jd_</p>
<ul>
<li>float</li>
</ul>
<p>leading chars other than +-.digit ignored</br> strtod rules</br> missing/bad - __ (float negative infinity)</p>
<p>csvwr writes empty field for __</p>
<ul>
<li>edate, edatetime, edatetimem, edatetimen</li>
</ul>
<p>leading and trailing blanks ignored</br> efs rules</br> mising/bad - IMIN_jd_</p>
<ul>
<li>date, datetime (yyyymmdd and ddmmyyyy)</li>
</ul>
<p>leading blanks ignored</br> non-digit OK between y m d parts</br> mm and dd can have 1 or 2 digits if separated by non-digit</br> extra non-blank chars are bad</br> missing/bad - IMIN_jd_</p>
<h2 id="csvprobe">csvprobe</h2>
<p>csvprobe [options] csvfile<br />
  /replace - replace existing cdefs file<br />
  - create cdefs file with csvcdefs /h 0 /u<br />
   - load 12 rows into temp table csvprobe<br />
    - read table<br />
examine table to determine /h parameter to use for csvcdefs and make sure rowsep, colsep, etc. make sense</p>
<h2 id="csvreport">csvreport</h2>
<p>csvreport [options] [0 or more tables]<br />
  /errors - table with csvrd error info</br>   /f - full report rather than summary<br />
</br>   report results of last csvrd for tables<br />
</p>
<h2 id="csvrestore">csvrestore</h2>
<p>csvrestore<br />
  /replace - start with creatdb[dropdb<br />
  csvrd all tables<br />
  uses jdcsvrefs.txt file to create refs<br />
  db files (e.g. admin.ijs) are restored<br />
</p>
<h2 id="csvscan">csvscan</h2>
<p>csvscan csvfile</p>
<p>uses cdefs options to scan entire file<br />
gets max widths for all cols<br />
adjusts cdefs file byte types to have max col width<br />
</p>
<h2 id="csvwr">csvwr</h2>
<p>csvwr [options] csvfile table [0 or more col names] [where clause]<br />
  /e - write epoch cols as ints (cdefs option iso8601-int)<br />
  /h1 - header with col names<br />
  /w - final arg is where clause<br />
  /combine - ptable parts written as single file</p>
<p>  all cols written if none are named<br />
  where clause after * to avoid blank/quote problems</p>
</body>
</html>
