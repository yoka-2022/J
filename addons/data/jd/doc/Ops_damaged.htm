<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
  <title></title>
  <style type="text/css">code{white-space: pre;}</style>
  <link rel="stylesheet" href="jd.css">
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<p><div id="nav"><a href="Index.htm">Jd</a>&nbsp;|&nbsp;<a href="Overview.htm">Overview</a>&nbsp;|&nbsp;<a href="General.htm">General</a>&nbsp;|&nbsp;<a href="Ops.htm">Ops</a>&nbsp;|&nbsp;<a href="Admin.htm">Admin</a>&nbsp;|&nbsp;<a href="Replicate.htm">Replicate</a>&nbsp;|&nbsp;<a href="Guide.htm">Guide</a>&nbsp;|&nbsp;<a href="Technical.htm">Technical</a>&nbsp;|&nbsp;<a href="Release.htm">Release</a>&nbsp;|&nbsp;<a href="License.htm">License</a>&nbsp;|&nbsp;<a href="Support.htm">Support</a></div></p>
<h2 id="damaged">damaged</h2>
<p>A db can be damaged by: hardware crashes, OS crashes, Jd bugs, application bugs...</p>
<p>A db is marked as damaged to prevent further use to avoid: appearing OK (when it isn't), strange errors, further damage (obscuring the original problem), wrong answers, ...</p>
<p>A db is marked as damaged when:</p>
<dl>

<dd>Jd detects a serious problem - e.g., access a col with a bad count
</dd>
<dd>jd'validate' finds a problem
</dd>
<dd>jddamage_jd_'reason' is run to mark as damaged
</dd>
</dl>
<pre><code>   jd&#39;info validate&#39;     NB. complete report
   jd&#39;info validatebad&#39;  NB. problem report
   jd&#39;validate&#39;          NB. mark db as damaged if problem report not empty</code></pre>
<p>A hardware crash mid insert can leave cols with bad counts. Accessing the db again and only using cols with good counts will work. But when you access a col with a bad count, the db will be marked as damaged.</p>
<p>After a crash (or any event that makes you nervous), always run jd'validate' to be sure there are no issues that will bite you down the road.</p>
<p>See tutorial log.</p>
<h2 id="repair">repair</h2>
<p>Jd can work with a damaged db if jdrepair has marked the db as under repair. In some cases this can facilitate determining the damage and effecting a repair.</p>
<p>The repair tool can fix some problems.</p>
<p>If you have a damaged db, try the following:</p>
<pre><code>   jdadmin ...
|db damaged and not under repair: assert
|...
   jd&#39;info validatebad&#39;
|db damaged and not under repair: assert
|...
   jdrepair_jd_ &#39;fixing it now&#39;
   jd&#39;info validatebad&#39; NB. problems
...
   repair_jd_&#39;&#39;         NB. fix col counts - mark refs as dirty
   jd&#39;info validatebad&#39; NB. are problems fixed?</code></pre>
</body>
</html>
